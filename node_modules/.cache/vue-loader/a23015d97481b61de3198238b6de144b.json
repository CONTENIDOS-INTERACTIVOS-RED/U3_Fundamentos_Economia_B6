{"remainingRequest":"/home/runner/work/U3_Fundamentos_Economia_B6/U3_Fundamentos_Economia_B6/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/runner/work/U3_Fundamentos_Economia_B6/U3_Fundamentos_Economia_B6/node_modules/pug-plain-loader/index.js!/home/runner/work/U3_Fundamentos_Economia_B6/U3_Fundamentos_Economia_B6/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/U3_Fundamentos_Economia_B6/U3_Fundamentos_Economia_B6/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U3_Fundamentos_Economia_B6/U3_Fundamentos_Economia_B6/src/views/curso/Tema1.vue?vue&type=template&id=49b93944&lang=pug&","dependencies":[{"path":"/home/runner/work/U3_Fundamentos_Economia_B6/U3_Fundamentos_Economia_B6/src/views/curso/Tema1.vue","mtime":1745894775762},{"path":"/home/runner/work/U3_Fundamentos_Economia_B6/U3_Fundamentos_Economia_B6/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Fundamentos_Economia_B6/U3_Fundamentos_Economia_B6/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U3_Fundamentos_Economia_B6/U3_Fundamentos_Economia_B6/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U3_Fundamentos_Economia_B6/U3_Fundamentos_Economia_B6/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Fundamentos_Economia_B6/U3_Fundamentos_Economia_B6/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}